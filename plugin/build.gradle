/*
 * Copyright 2013. Muhammad Ashraf
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

apply plugin: "java"
apply plugin: "groovy"
apply plugin: 'maven'
apply plugin: 'eclipse'

group = "org.github.mansur.oozie"

buildscript {
  repositories {
    mavenLocal()
    mavenCentral()
  }
}

configurations {
    deployerJars
}

repositories {
    mavenCentral()
	maven
	{ url "http://oss.sonatype.org/content/repositories/snapshots/"}
}
dependencies {
    compile gradleApi()
    compile 'org.codehaus.groovy:groovy-all:2.3.6'
    testCompile 'junit:junit:4.11'
    testCompile "org.easytesting:fest-assert-core:2.0M10",
    testCompile('org.spockframework:spock-core:1.0-groovy-2.3-SNAPSHOT')
    testCompile 'xmlunit:xmlunit:1.4'
//    deployerJars 'org.apache.maven.wagon:wagon-webdav:1.0-beta-2'
    deployerJars 'org.apache.maven.wagon:wagon-http:2.2'
}

task getUploadCredentials << {
  def console = System.console()
  def username
  def password
  if (console == null) {
    throw new Exception("no console (consider passing --no-daemon to gradle)")
  }
  else {
    console.println ();
    uploadArchives.repositories.mavenDeployer.repository.with {
      authentication.userName = console.readLine('Deploy username: ');
      authentication.password = new String(console.readPassword('Deploy password: '));
    }
  }
}

uploadArchives.dependsOn(getUploadCredentials)

uploadArchives {
    repositories.mavenDeployer {
        configuration = configurations.deployerJars
        repository(url: deployUrl) {
          authentication()
        }
//        snapshotRepository(url: "dav:https://repository-uncommon-configuration.forge.cloudbees.com/snapshot/", configureAuth)
    }
}

